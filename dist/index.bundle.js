(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>C});var o=t(354),a=t.n(o),i=t(314),r=t.n(i),c=t(417),s=t.n(c),l=new URL(t(519),t.b),d=new URL(t(318),t.b),A=new URL(t(876),t.b),m=new URL(t(933),t.b),p=r()(a()),u=s()(l),h=s()(d),f=s()(A),g=s()(m);p.push([n.id,`@font-face {\n    font-family: 'MyFont';\n    src: url(${u}) format('ttf'),\n      url(${h}) format('ttf');\n    \n    font-style: normal;\n  }\n\n\n\nbody {\n    margin: 0px;\n    padding: 0px;\n    min-height: 100vh;\n    width: auto;\n    font-family:  'MyFont', 'Arial';\n    background: url(${f});\n}\n\nbutton {\n    background: none;\n    border: none;\n    color: white;\n    font-size: 1.25rem;\n}\nh1 {\n    font-size: 64px;\n    \n}\n\nheader { \n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n}\n\nnav {\n    display: flex;\n    margin: 40px;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n}\n\n#content {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n\n\n\n}\n\n.container {\n    display: flex;\n    flex-direction: Column;\n    background: black;\n    justify-content: center;\n    align-items: center;\n    opacity: 0.25;\n    margin-left: 22vh;\n    margin-right: 22vh;\n    margin-top: 25vh;\n    padding: 10px;\n    min-width: 58vh;\n    min-height: 43vh;\n\n}\n\n.center-container {\n    position: absolute;\n    display: flex;\n    flex-direction: Column;\n    justify-content: center;\n    align-items: center;\n    margin-left: 22vh;\n    margin-right: 22vh;\n    min-width: 56vh;\n    min-height: 20vh;\n    \n\n}\n\n.center {\n\n    font-family: 'MyFont', 'Arial';\n    color: white;\n    font-weight: 100;\n    text-align: center;\n    margin-left: 20vh;\n    margin-right: 20vh;\n    margin-top: 5vh;\n    padding: 10px;\n    min-width: 50vh;\n    max-width:60vh;\n    max-height: 40vh;\n    min-height: 25vh;\n    letter-spacing: .25rem;\n    line-height: 1.6;\n    \n\n}\n\n.contact-container{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: black;\n    opacity: 0.25;\n    \n\n}\n\n.contact-info {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.contact{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n}\n\n#map {\n    display: flex;\n}\n\n<h1>Contact Us</h1>\n<h3>Phone</h3>\n<h4>212-867-5309</h4>\n<br>\n<h3>email</h3>\n<h4>info@oakandember.com</h4>\n\n\n#iframe {\n    width: 600;\n    height: 450;\n    border: 0;\n}\n\n#googleMap {\n    width: 100%;\n    height: 400px;\n}\n\n#menu-image {\n    background: url(${g});\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB;2DACgD;;IAEhD,kBAAkB;EACpB;;;;AAIF;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,WAAW;IACX,+BAA+B;IAC/B,mDAA6B;AACjC;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,YAAY;IACZ,kBAAkB;AACtB;AACA;IACI,eAAe;;AAEnB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;AAEvB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;;;;AAInB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,iBAAiB;IACjB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;IACb,eAAe;IACf,gBAAgB;;AAEpB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;IACf,gBAAgB;;;AAGpB;;AAEA;;IAEI,8BAA8B;IAC9B,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,eAAe;IACf,cAAc;IACd,gBAAgB;IAChB,gBAAgB;IAChB,sBAAsB;IACtB,gBAAgB;;;AAGpB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;IACjB,aAAa;;;AAGjB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;;AAE3B;;AAEA;IACI,aAAa;AACjB;;AAEA;;;;;;;;;IASI,UAAU;IACV,WAAW;IACX,SAAS;AACb;;AAEA;IACI,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,mDAAgC;AACpC",sourcesContent:["@font-face {\n    font-family: 'MyFont';\n    src: url('./Mukta/Mukta-Bold.ttf') format('ttf'),\n      url('./Mukta/Mukta-Regular.ttf') format('ttf');\n    \n    font-style: normal;\n  }\n\n\n\nbody {\n    margin: 0px;\n    padding: 0px;\n    min-height: 100vh;\n    width: auto;\n    font-family:  'MyFont', 'Arial';\n    background: url('./icon.png');\n}\n\nbutton {\n    background: none;\n    border: none;\n    color: white;\n    font-size: 1.25rem;\n}\nh1 {\n    font-size: 64px;\n    \n}\n\nheader { \n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n}\n\nnav {\n    display: flex;\n    margin: 40px;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n}\n\n#content {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n\n\n\n}\n\n.container {\n    display: flex;\n    flex-direction: Column;\n    background: black;\n    justify-content: center;\n    align-items: center;\n    opacity: 0.25;\n    margin-left: 22vh;\n    margin-right: 22vh;\n    margin-top: 25vh;\n    padding: 10px;\n    min-width: 58vh;\n    min-height: 43vh;\n\n}\n\n.center-container {\n    position: absolute;\n    display: flex;\n    flex-direction: Column;\n    justify-content: center;\n    align-items: center;\n    margin-left: 22vh;\n    margin-right: 22vh;\n    min-width: 56vh;\n    min-height: 20vh;\n    \n\n}\n\n.center {\n\n    font-family: 'MyFont', 'Arial';\n    color: white;\n    font-weight: 100;\n    text-align: center;\n    margin-left: 20vh;\n    margin-right: 20vh;\n    margin-top: 5vh;\n    padding: 10px;\n    min-width: 50vh;\n    max-width:60vh;\n    max-height: 40vh;\n    min-height: 25vh;\n    letter-spacing: .25rem;\n    line-height: 1.6;\n    \n\n}\n\n.contact-container{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: black;\n    opacity: 0.25;\n    \n\n}\n\n.contact-info {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.contact{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n}\n\n#map {\n    display: flex;\n}\n\n<h1>Contact Us</h1>\n<h3>Phone</h3>\n<h4>212-867-5309</h4>\n<br>\n<h3>email</h3>\n<h4>info@oakandember.com</h4>\n\n\n#iframe {\n    width: 600;\n    height: 450;\n    border: 0;\n}\n\n#googleMap {\n    width: 100%;\n    height: 400px;\n}\n\n#menu-image {\n    background: url('./plating.png');\n}"],sourceRoot:""}]);const C=p},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(r[s]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);o&&r[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},r=[],c=0;c<n.length;c++){var s=n[c],l=o.base?s[0]+o.base:s[0],d=i[l]||0,A="".concat(l," ").concat(d);i[l]=d+1;var m=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(p);else{var u=a(p,o);o.byIndex=c,e.splice(c,0,{identifier:A,updater:u,references:1})}r.push(A)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var c=t(i[r]);e[c].references--}for(var s=o(n,a),l=0;l<i.length;l++){var d=t(i[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},519:(n,e,t)=>{n.exports=t.p+"6a7897f127e01e4b0d8f.ttf"},318:(n,e,t)=>{n.exports=t.p+"044d4dd07d7636695eda.ttf"},876:(n,e,t)=>{n.exports=t.p+"ce6e9573942c1a1fc06f.png"},933:(n,e,t)=>{n.exports=t.p+"883216d86cdbdf5b5f86.png"}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&(!n||!/^http(s?):/.test(n));)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),a=t.n(o),i=t(659),r=t.n(i),c=t(56),s=t.n(c),l=t(540),d=t.n(l),A=t(113),m=t.n(A),p=t(208),u={};u.styleTagTransform=m(),u.setAttributes=s(),u.insert=r().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=d(),e()(p.A,u),p.A&&p.A.locals&&p.A.locals,console.log("menu.js served!");let h=document.getElementById("content");console.log({content:h}),console.log("home.js served!");let f=document.getElementById("content");function g(){console.log("home fired");const n=document.createElement("div");n.classList.add("container"),f.appendChild(n),console.log({container:n});const e=document.createElement("div");e.classList.add("center-container"),f.appendChild(e),console.log({centerContainer:e});const t=document.createElement("div");t.classList.add("center"),e.appendChild(t),console.log({center:t});const o=document.createElement("h1");o.id="title",o.textContent="Oak & Ember",t.appendChild(o);const a=document.createElement("h4");a.id="first-text",a.textContent="American cuisine with an emphasis on seasonal and locally sourced ingredients. Our menu features a mix of artisanal meats, sustainable seafood, and fresh produce, prepared to highlight their natural flavors. ",t.appendChild(a);let i=document.createElement("br");t.appendChild(i);const r=document.createElement("h4");r.id="second-text",r.textContent="Oak & Ember's dedication to local sourcing and seasonal ingredients enriches every meal with exceptional flavors, connecting diners to the land and celebrating the seasons. Our philosophy ensures a dining experience that&apos;s both delicious and meaningful, bringing the essence of America&apos;s heartland to each dish.",t.appendChild(r)}console.log({content:f}),console.log("contact.js served!");let C=document.getElementById("content");console.log({content:C}),console.log("index.js served!");const B=document.getElementById("content"),v=document.querySelector("#home"),I=document.querySelector("#menu"),y=document.querySelector("#contact");g(),v.addEventListener("click",(()=>{B.innerHTML="",g()})),y.addEventListener("click",(()=>{B.innerHTML="",function(){console.log("contact fired");const n=document.createElement("div");n.classList.add("contact-container"),C.appendChild(n),console.log({contactContainer:n});const e=document.createElement("div");e.classList.add("contact-info"),n.appendChild(e),console.log({contactInfo:e});const t=document.createElement("div");t.id="map",n.appendChild(t),console.log({map:t});const o=document.createElement("h1");o.textContent="menu",e.appendChild(o);const a=document.createElement("h3");a.textContent="Phone",e.appendChild(a);const i=document.createElement("h4");i.textContent="212-867-5309",e.appendChild(i);const r=document.createElement("br");e.appendChild(r);const c=document.createElement("h3");c.textContent="Email",e.appendChild(c);const s=document.createElement("h4");s.textContent="info@oakandember.com",e.appendChild(s);const l=document.createElement("div");l.id="googleMap",t.appendChild(l);const d=document.createElement("iframe");d.id="iframe",d.src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3022.5844719783977!2d-73.9674781!3d40.749168!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89c2591c5b5896d7%3A0x5b6f3d4edb00a068!2sUnited%20Nations%20Secretariat%20Building%2C%20405%20E%2042nd%20St%2C%20New%20York%2C%20NY%2010017!5e0!3m2!1sen!2sus!4v1709071700930!5m2!1sen!2sus",t.appendChild(d)}()})),I.addEventListener("click",(()=>{B.innerHTML="",function(){console.log("menu fired");const n=document.createElement("div");n.classList.add("contact-container"),h.appendChild(n),console.log({contactContainer:n});const e=document.createElement("div");e.classList.add("contact-info"),n.appendChild(e),console.log({contactInfo:e});const t=document.createElement("div");t.id="map",n.appendChild(t),console.log({map:t});const o=document.createElement("h1");o.textContent="menu",e.appendChild(o);const a=document.createElement("h3");a.textContent="Phone",e.appendChild(a);const i=document.createElement("h4");i.textContent="212-867-5309",e.appendChild(i);const r=document.createElement("br");e.appendChild(r);const c=document.createElement("h3");c.textContent="Email",e.appendChild(c);const s=document.createElement("h4");s.textContent="info@oakandember.com",e.appendChild(s);const l=document.createElement("div");l.id="googleMap",t.appendChild(l);const d=document.createElement("iframe");d.id="iframe",d.src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3022.5844719783977!2d-73.9674781!3d40.749168!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89c2591c5b5896d7%3A0x5b6f3d4edb00a068!2sUnited%20Nations%20Secretariat%20Building%2C%20405%20E%2042nd%20St%2C%20New%20York%2C%20NY%2010017!5e0!3m2!1sen!2sus!4v1709071700930!5m2!1sen!2sus",t.appendChild(d)}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,